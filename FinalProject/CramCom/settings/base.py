"""
Django settings for a simple project.
Generated by 'django-admin startproject' using Django 1.8.8.
For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import sys
import os


from os import path
from django.utils.translation import ugettext_lazy as _



import datetime

env = os.environ.get

PROJECT_ROOT = path.dirname(path.dirname(path.abspath(__file__))) # project_dir
#BASE_DIR = path.dirname(PROJECT_ROOT) # settings

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
APP_DIR = path.join(PROJECT_ROOT, "apps") # settings
ASSET_DIR = path.join(PROJECT_ROOT, "assets") # settings

APP_PATH = os.path.dirname(os.path.abspath(__file__))


APPEND_SLASH = True
DELETE_MEDIA_FILE_METHOD = 'core.utils.delete_file_local'

sys.path.insert(0, path.abspath(APP_DIR))
sys.path.insert(0, path.abspath(ASSET_DIR)) # currently empty

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'bootstrapform',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django_gravatar',

    'storages',
    'CramCom',
    'CramCom.Modules.Session',
    'CramCom.Modules.Group',


    #'allauth.socialaccount.providers.facebook', need to implement
    #'allauth.socialaccount.providers.google', need to implement
    'rest_framework',
    'widget_tweaks',
    #'channels'

)

# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'asgi_redis.RedisChannelLayer',
#         'CONFIG': {
#             'hosts': [('localhost', 6379)],
#         },
#         'ROUTING': 'CramCom.routing.channel_routing',
#     }
# }

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
       'solid_i18n.middleware.SolidLocaleMiddleware',
       'django.middleware.common.CommonMiddleware',
)

ROOT_URLCONF = 'CramCom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            path.join(PROJECT_ROOT, "templates"),
            path.join(PROJECT_ROOT, 'Modules', 'Group', 'templates'),
            path.join(PROJECT_ROOT, 'Modules', 'Session', 'templates'),
            # path.join(PROJECT_ROOT, 'CramCom', 'Modules', 'Session', 'templates'),
            #path.join(PROJECT_ROOT, "Modules/Session/templates"),
            path.join(PROJECT_ROOT, 'templates', 'account'),
            #os.path.join(BASE_DIR, "templates")

        ],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',

            ],
            'loaders':[
            #'admin_tools.template_loaders.Loader',
            ('django.template.loaders.cached.Loader', [
            'django.template.loaders.filesystem.Loader',
            'django.template.loaders.app_directories.Loader',
            ]),
            ],
        },
    },
]


# TEMPLATE_CONTEXT_PROCESSORS = (
#     "django.core.context_processors.request",
#     "django.contrib.auth.context_processors.auth",
#     "allauth.account.context_processors.account",
#     "allauth.socialaccount.context_processors.socialaccount",
# )

TEMPLATES_LOADERS = (
    "admin_tools.template_loaders.Loader",
)

WSGI_APPLICATION = 'CramCom.wsgi.application'


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

LANGUAGES = (
    ('en', _('English')),
    ('de', _('German')),
)

LANGUAGE_CODE = 'en-us'


USE_I18N = True

USE_L10N = True



USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/


STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',

)
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "../static"),
#     os.path.join(BASE_DIR, "static"),
# ]



# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#     ),
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
#     ),
# }
ACCOUNT_SIGNUP_FORM_CLASS = 'CramCom.forms.SignupForm'

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    #"django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
)

APPSECRET_PROOF = False
USE_TZ = True
TIME_ZONE = 'America/Chicago'

EMAIL_BACKEND = 'django_amazon_ses.backends.boto.EmailBackend'
DJANGO_AMAZON_SES_REGION = 'us-west-2'
EMAIL_HOST = 'email-smtp.us-west-2.amazonaws.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'AKIAJF3Y2UR6X33EJASA'
EMAIL_HOST_PASSWORD = 'Ag73aslUyhmZbFHB4nb+CRioHOJF5lvRoRYmU6gkMvaY'
DEFAULT_FROM_EMAIL = 'sourceiron.confirmation@gmail.com'


SITE_ID = 1

# Custom allauth settings
#Use email as the primary identifier
#ACCOUNT_AUTHENTICATION_METHOD = 'email'

# Eliminate need to provide username, as it's a very old practice
ACCOUNT_USERNAME_REQUIRED = True

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 9,
        }
    }
]
# auth and allauth settings
LOGIN_REDIRECT_URL = '/Groups/StudyGroups'
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'SCOPE': ['email', 'publish_stream'],
        'METHOD': 'js_sdk'  # instead of 'oauth2'
    }
}
